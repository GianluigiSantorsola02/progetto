/*******************************************************************************
 * Copyright (c) 2017, 2022 Eurotech and/or its affiliates and others
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *  Eurotech
 *  Amit Kumar Mondal
 *******************************************************************************/
package org.eclipse.kura.internal.wire.h2db.store;

import java.util.Map;

import org.eclipse.kura.db.BaseDBWireComponentQueries;
import org.osgi.service.component.ComponentContext;

/**
 * The Class DbWireRecordStore is a wire component which is responsible to store
 * the received {@link WireRecord}.
 */
public class H2DbWireRecordStore implements BaseDBWireComponentQueries {

    private static final String COLUMN_NAME = "COLUMN_NAME";
    private static final String DATA_TYPE = "DATA_TYPE";
    private static final String SQL_ADD_COLUMN = "ALTER TABLE {0} ADD COLUMN {1} {2};";
    private static final String SQL_CREATE_TABLE = "CREATE TABLE IF NOT EXISTS {0} (ID BIGINT GENERATED BY DEFAULT "
            + "AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY, TIMESTAMP BIGINT);";
    private static final String SQL_CREATE_TABLE_INDEX = "CREATE INDEX IF NOT EXISTS {0} ON {1} {2};";
    private static final String SQL_ROW_COUNT_TABLE = "SELECT COUNT(*) FROM {0};";
    private static final String SQL_DELETE_RANGE_TABLE = "DELETE FROM {0} WHERE ID IN (SELECT ID FROM {0} ORDER BY ID ASC LIMIT {1});";
    private static final String SQL_DROP_COLUMN = "ALTER TABLE {0} DROP COLUMN {1};";
    private static final String SQL_INSERT_RECORD = "INSERT INTO {0} ({1}) VALUES ({2});";
    private static final String SQL_TRUNCATE_TABLE = "TRUNCATE TABLE {0};";
    private static final String[] TABLE_TYPE = new String[] { "TABLE" };

    public void activate(final ComponentContext componentContext, final Map<String, Object> properties) {
        // Do nothing...
    }

    public synchronized void updated(final Map<String, Object> properties) {
        // Do nothing...
    }

    public void deactivate(final ComponentContext componentContext) {
        // Do nothing...
    }

    @Override
    public String getColumnNameString() {
        return COLUMN_NAME;
    }

    @Override
    public String getDataTypeString() {
        return DATA_TYPE;
    }

    @Override
    public String getAddColumnQuery() {
        return SQL_ADD_COLUMN;
    }

    @Override
    public String getCreateTableQuery() {
        return SQL_CREATE_TABLE;
    }

    @Override
    public String getCreateTableIndexQuery() {
        return SQL_CREATE_TABLE_INDEX;
    }

    @Override
    public String getRowCountTableQuery() {
        return SQL_ROW_COUNT_TABLE;
    }

    @Override
    public String getDeleteRangeTableQuery() {
        return SQL_DELETE_RANGE_TABLE;
    }

    @Override
    public String getDropColumnQuery() {
        return SQL_DROP_COLUMN;
    }

    @Override
    public String getInsertRecordQuery() {
        return SQL_INSERT_RECORD;
    }

    @Override
    public String getTruncateTableQuery() {
        return SQL_TRUNCATE_TABLE;
    }

    @Override
    public String[] getTableType() {
        return TABLE_TYPE;
    }
}
